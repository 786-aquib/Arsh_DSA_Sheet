[Problem_Link :- https://leetcode.com/problems/find-the-duplicate-number/
Solution :-   { Linked list two pointer Approach traversing through index of the element }
class Solution {
public:
    int findDuplicate(vector<int>& a) {
      int slow = a[0];
      int fast = a[0];
      do{
           slow=a[slow];
           fast=a[a[fast]];
        }
        while(slow != fast);
      fast = a[0];
      while(slow != fast){
          slow = a[slow];
          fast = a[fast];
      }
      return slow;
    }
};
]
/*****************************************************************************/



[Problem_Link :-https://leetcode.com/problems/sort-colors/
Solution :-
class Solution {
public:
    void sortColors(vector<int>& a) {
        int n = a.size();
       int low=0,hi=n-1,mid=0;
        while(mid<=hi){
            if(a[mid]==0){
             swap(a[mid],a[low]);
             low++;
             mid++;
            }
           else if(a[mid]==2){
                swap(a[mid],a[hi]);
                hi--;
            }
           else  if(a[mid]==1){
                mid++;
            }
       }
    }
};
]


/*****************************************************************************/